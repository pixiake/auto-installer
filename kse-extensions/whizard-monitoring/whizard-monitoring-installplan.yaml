apiVersion: kubesphere.io/v1alpha1
kind: InstallPlan
metadata:
  annotations:
    kubesphere.io/installation-mode: "Multicluster"
  name: whizard-monitoring
spec:
  enabled: true
  extension:
    name: whizard-monitoring
    version: 1.0.0
  config: |-
    global:
      ## Global image registry to use if it needs to be overriden for some specific use cases (e.g local registries, custom images, ...)
      ##
      imageRegistry: ""
    
      ## Reference to one or more secrets to be used when pulling images
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      imagePullSecrets: []
      # - name: "image-pull-secret"
      # or
      # - "image-pull-secret"
      nodeSelector: {}
    
      clusterInfo: {}
    
    whizard-monitoring-helper:
      etcdMonitoringHelper:
        enabled: false
      gpuMonitoringHelper:
        enabled: false
      whizardHelper:
        enabled: false
    
      hook:
        image:
          registry: docker.io
          repository: kubesphere/kubectl
          tag: v1.27.12
    
    whizard:
      enabled: false  
      namespaceOverride: ""
      fullnameOverride: "whizard"
    
      selfMonitor:
        enabled: false
    
      service:
        ## Set remote writes
        remoteWrites:
        # - name: remote
        #   url: remote_storage_address
    
        ## Set remote query
        remoteQuery:
          # url: remote_query_address
    
        compactorTemplateSpec:
          dataVolume:
            persistentVolumeClaim:
              spec:
                resources:
                  requests:
                    storage: 20Gi
    
        ingesterTemplateSpec:
          dataVolume:
            persistentVolumeClaim:
              spec:
                resources:
                  requests:
                    storage: 20Gi
    
        storeTemplateSpec:
          dataVolume:
            persistentVolumeClaim:
              spec:
                resources:
                  requests:
                    storage: 20Gi
    
          timeRanges:
            - maxTime: -36h
    
      ingester:
        additionalConfig:
          dataVolume:
            persistentVolumeClaim:
              spec:
                resources:
                  requests:
                    storage: 10Gi
    
      gateway: 
        nodePort: 30990
    
      ruler:
        enabled: false
    
    whizardAgentProxy:
      enabled: false
    
    whizard-agent-proxy:
      namespaceOverride: ""
      fullnameOverride: "whizard-agent-proxy"
      image:
        registry: docker.io
        repository: kubesphere/whizard-monitoring-agent-proxy
        tag: "v0.10.0"
      config:
        gatewayUrl: ""
    
    kubePrometheusStack:
      enabled: true
    
    kube-prometheus-stack:
    
      prometheus:
        # agentMode need to be set to true when enable whizard
        agentMode: false
    
        prometheusSpec:
          image:
            registry: quay.io
            repository: prometheus/prometheus
            tag: v2.50.1
          replicas: 1
          resources:
            limits:
              cpu: "4"
              memory: 16Gi
            requests:
              cpu: 200m
              memory: 400Mi
          storageSpec:
            volumeClaimTemplate:
              spec:
                resources:
                  requests:
                    storage: 20Gi
          securityContext:
            fsGroup: 0
            runAsNonRoot: false
            runAsUser: 0  
          secrets: []
          # - kube-etcd-client-certs ## be added when enable kubeEtcd servicemonitor with tls config
    
      prometheusOperator:
        image:
          registry: quay.io
          repository: prometheus-operator/prometheus-operator
          tag: v0.68.0
    
        
        admissionWebhooks:
          patch:
            image:
              registry: docker.io
              repository: kubespheredev/kube-webhook-certgen
              tag: v20221220-controller-v1.5.1-58-g787ea74b6
    
        prometheusConfigReloader:
          image:
            registry: quay.io
            repository: prometheus-operator/prometheus-config-reloader
            tag: v0.68.0
    
      kube-state-metrics:
        image:
          registry: docker.io
          repository: kubesphere/kube-state-metrics
          tag: v2.8.2
    
        kubeRBACProxy:
          image:
            registry: quay.io
            repository: brancz/kube-rbac-proxy
            tag: v0.14.0
    
    
      prometheus-node-exporter:
        image:
          registry: quay.io
          repository: prometheus/node-exporter
          tag: "v1.6.0"
    
        kubeRBACProxy:
          image:
            registry: quay.io
            repository: brancz/kube-rbac-proxy
            tag: v0.14.0
    
        ProcessExporter:
          enabled: false
          image:
            repository: kubesphere/process-exporter
            tag: "0.5.0"
    
        CalicoExporter:
          enabled: false
          image:
            repository: kubesphere/calico-exporter
            tag: v0.2.0
    
      kubeEtcd:
        ## If you want to enable etcd monitoring, set etcd endpoints and generate certificate secrets. The reference command is as follows:
        ##
        ## kubectl -n kubesphere-monitoring-system create secret generic kube-etcd-client-certs  \
        ## --from-file=etcd-client-ca.crt=/etc/ssl/etcd/ssl/ca.pem  \
        ## --from-file=etcd-client.crt=/etc/ssl/etcd/ssl/node-$(hostname).pem  \
        ## --from-file=etcd-client.key=/etc/ssl/etcd/ssl/node-$(hostname)-key.pem
        ##
        enabled: false
        endpoints: []
        #  - 172.31.73.206
    
    
    dcgmExporter:
      enabled: false
      nodeSelector: {}
    
      image:
        registry: docker.io
        repository: kubesphere/dcgm-exporter
        tag: 3.3.5-3.4.0-ubuntu22.04
  clusterScheduling:
    placement:
      clusters:
      - host
