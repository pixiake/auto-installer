apiVersion: v1
kind: ConfigMap
metadata:
  name: etcd-endpoint-secret-generator
  namespace: kubesphere-system
data:
  etcd-endpoint-secret-generator.sh: |
    #!/bin/sh
    
    kubectl create ns kubesphere-monitoring-system
    kubectl -n kubesphere-monitoring-system create secret generic kube-etcd-client-certs \
            --from-file=etcd-client-ca.crt=/etc/ssl/etcd/ssl/ca.pem \
            --from-file=etcd-client.crt=/etc/ssl/etcd/ssl/node-${KUBERNETES_NODE_NAME}.pem \
            --from-file=etcd-client.key=/etc/ssl/etcd/ssl/node-${KUBERNETES_NODE_NAME}-key.pem
    
    cat <<EOF > etcd-endpoints.yaml
    apiVersion: v1
    kind: Endpoints
    metadata:
      labels:
        app.kubernetes.io/name: etcd
      name: whizard-monitoring-agent-k-kube-etcd
      namespace: kube-system
    subsets:
    - ports:
      - name: metrics
        port: 2379
        protocol: TCP
      addresses:
    EOF
    
    # get etcd address from kube-apiserver and replace the etcd address in etcd-endpoints.yaml
    etcdendpoints=$(kubectl get pod -n kube-system -l component=kube-apiserver -o jsonpath='{.items[0].spec.containers[0].command}' | jq -r '.[] | select(startswith("--etcd-servers="))' | grep -oE "([0-9]{1,3}[\.]){3}[0-9]{1,3}")
    
    for ip in $etcdendpoints; do
      echo "  - ip: $ip" >> etcd-endpoints.yaml
    done
    
    kubectl apply -f etcd-endpoints.yaml
    

---
apiVersion: batch/v1
kind: Job
metadata:
  name: etcd-endpoint-secret-generator
  namespace: kubesphere-system
  labels:
    app: etcd-endpoint-secret-generator
spec:
  template:
    metadata:
      labels:
        app: etcd-endpoint-secret-generator
    spec:
      restartPolicy: Never
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
      containers:
      - name: generator
        image: hub.kubesphere.com.cn/kse-v410/kubesphere/kubectl:v1.27.12
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/sh"
          - "/kse/etcd-endpoint-secret-generator.sh"
        env:
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 20m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/localtime
          name: host-time
          readOnly: true
        - mountPath: /root/.kube/config
          name: kubeconfig
          readOnly: true
        - mountPath: /etc/ssl/etcd/ssl
          name: etcd-certs
          readOnly: true
        - mountPath: /kse/etcd-endpoint-secret-generator.sh
          name: etcd-endpoint-secret-generator
          subPath: etcd-endpoint-secret-generator.sh
      volumes:
      - hostPath:
          path: /etc/localtime
          type: ""
        name: host-time
      - hostPath:
          path: /root/.kube/config
          type: ""
        name: kubeconfig
      - hostPath:
          path: /etc/ssl/etcd/ssl
          type: ""
        name: etcd-certs
      - configMap:
          defaultMode: 420
          name: etcd-endpoint-secret-generator
        name: etcd-endpoint-secret-generator
